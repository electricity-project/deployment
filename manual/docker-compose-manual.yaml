name: szoze-system
services:
  calculations-db:
    image: postgres:latest
    healthcheck:
      test: exit 0
    environment:
      POSTGRES_USER: calculations-user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: calculations-db
    ports:
      - "6432:5432"

  calculations-db-access:
    image: calculations-db-access:latest
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://calculations-db:5432/calculations-db
      SPRING_DATASOURCE_USERNAME: calculations-user
      SPRING_DATASOURCE_PASSWORD: password
    depends_on:
      calculations-db:
        condition: service_healthy
    ports:
      - "8090:8090"

  central-module:
    image: central-module:latest
    environment:
      KAFKA_BROKER_ADDRESS: kafka:9092
      CALCULATION_DATABASE_APPLICATION_ADDRESS: http://calculations-db-access:8090
      MEDIATIVE_MODULE_APPLICATION_ADDRESS: http://mediative-module:8082
      REAL_TIME_CALCULATIONS_ADDRESS: http://real-time-calculations:8079
    depends_on:
      kafka:
        condition: service_started
      calculations-db-access:
        condition: service_started
    ports:
      - "8081:8080"

  real-time-calculations:
    image: real-time-calculations:latest
    environment:
      CALCULATIONS_DB_ACCESS_URL: http://calculations-db-access:8090
      CENTRAL_MODULE_URL: http://central-module:8080
      MEDIATIVE_MAPPING_URL: /mediative-module
      SERVER_PORT: 8079
    depends_on:
      calculations-db-access:
        condition: service_started
      central-module:
        condition: service_started
    ports:
      - "8079:8079"

  log_db:
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: logdb
    ports:
      - "5002:5432"
    healthcheck:
      test: "exit 0"

  mediative-module:
    image: mediative-module:latest
    environment:
      MQTT_CLIENT_USERNAME: rabbitmq-user
      MQTT_CLIENT_PASSWORD: password
      MQTT_BROKER_URL: tcp://rabbitmq:1883
      KAFKA_BROKER_ADDRESS: kafka:9092
      SPRING_DATASOURCE_URL: jdbc:postgresql://log_db:5432/logdb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: password
    ports:
      - "8082:8082"
    depends_on:
      log_db:
        condition: service_healthy
      kafka:
        condition: service_started
      rabbitmq:
        condition: service_healthy

  simulation-db:
    image: postgres:latest
    healthcheck:
      test: exit 0
    environment:
      POSTGRES_USER: simulation-user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: simulation-db
    ports:
      - "7432:5432"

  simulation-module:
    image: simulation-module:latest
    environment:
      WEATHER_API_KEY: ${WEATHER_API_KEY}
      SPRING_DATASOURCE_URL: jdbc:postgresql://simulation-db:5432/simulation-db
      SPRING_DATASOURCE_USERNAME: simulation-user
      SPRING_DATASOURCE_PASSWORD: password
      MQTT_CLIENT_USERNAME: rabbitmq-user
      MQTT_CLIENT_PASSWORD: password
      MQTT_BROKER_URL: tcp://rabbitmq:1883
      TZ: "Europe/Warsaw"
    depends_on:
      simulation-db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    ports:
      - "8080:8080"

  user_db:
    image: postgres
    container_name: user_db_container_rm
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: userdb
    ports:
      - "5000:5432"
    healthcheck:
      test: "exit 0"

  keycloak:
    container_name: keycloak
    image: bitnami/keycloak:22.0.1
    volumes:
      - ./import:/opt/bitnami/keycloak/data/import
    environment:
      KEYCLOAK_DATABASE_HOST: user_db
      KEYCLOAK_DATABASE_NAME: userdb
      KEYCLOAK_DATABASE_USER: postgres
      KEYCLOAK_DATABASE_PASSWORD: password
      KEYCLOAK_HTTP_PORT: 9000
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: password
      KEYCLOAK_EXTRA_ARGS: "--import-realm"
    ports:
      - "9000:9000"
    depends_on:
      - user_db

  logic:
    image: logic:latest
    environment:
      API_BASE_URL: http://central-module:8080
    depends_on:
      central-module:
        condition: service_started
      keycloak:
        condition: service_started
    ports:
      - "8084:8080"

  web:
    image: web:latest
    environment:
      REACT_APP_API_BASE_URL: http://localhost:8084
    ports:
      - "80:80"

  zookeeper:
    image: zookeeper:3.8.2
#    restart: no
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
#    restart: no
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://:9092
      KAFKA_ADVERTISED_HOST_NAME: 127.0.0.1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper

  rabbitmq:
    build:
      dockerfile_inline: |
        FROM rabbitmq:3-management
        RUN rabbitmq-plugins enable --offline rabbitmq_mqtt
    environment:
      RABBITMQ_DEFAULT_USER: rabbitmq-user
      RABBITMQ_DEFAULT_PASS: password
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 30s
      timeout: 30s
      retries: 3
    ports:
      - 1883:1883